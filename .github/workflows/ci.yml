name: CI

on:
    push:
        branches: [ main ]
    pull_request:
        branches: [ main ]

jobs:
    backend-php-cs-fixer:
        name: PHP CS Fixer
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - name: Set up PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: '8.4'
            - name: Create .env file for fixer
              run: |
                  printf 'DATABASE_URL=test\nAPP_ENV=dev\n' > .env
            - name: Install Composer dependencies
              run: composer install --no-interaction --prefer-dist
            - name: Run PHP CS Fixer
              run: |
                  composer global require friendsofphp/php-cs-fixer
                  PHP_CS_FIXER_IGNORE_ENV=1 ~/.composer/vendor/bin/php-cs-fixer fix --dry-run --diff src

    backend-php-psalm:
        name: PHP Psalm (Symfony)
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - name: Set up PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: '8.4'
            - name: Create .env file for psalm
              run: |
                  printf 'DATABASE_URL=test\nAPP_ENV=test\n' > .env
            - name: Install Composer dependencies
              run: composer install --no-interaction --prefer-dist
            - name: Run Psalm
              run: ./bin/psalm --output-format=github

    backend-php-phpunit:
        name: PHPUnit (Symfony)
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - name: Set up PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: '8.4'
            - name: Create .env file for phpunit
              run: |
                  printf 'DATABASE_URL=test\nAPP_ENV=dev\n' > .env
            - name: Install Composer dependencies
              run: composer install --no-interaction --prefer-dist
            - name: Run PHPUnit
              run: ./bin/phpunit

    backend-php-lint:
        name: Symfony Lint
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - name: Set up PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: '8.4'
            - name: Install Composer dependencies
              run: composer install --no-interaction --prefer-dist
            - name: Run YAML Lint
              run: ./bin/console lint:yaml config/
            - name: Run Container Lint
              run: ./bin/console lint:container

    hadolint-multi:
        name: Hadolint multiple Dockerfiles
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v4
            -   name: Lint all Dockerfiles with Hadolint
                run: |
                    files=$(find . -type f -name 'Dockerfile*')
                    if [ -z "$files" ]; then
                      echo "No Dockerfiles found to lint"
                    else
                      for file in $files; do
                        echo "Linting $file"
                        docker run --rm -v "${{ github.workspace }}:/workspace" hadolint/hadolint "/workspace/${file#./}"
                      done
                    fi
